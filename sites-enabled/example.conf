# Upstream backend server
upstream backend {
    server app:3000;
}

upstream deployer {
    server docker-deployer:3000;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name example.com www.example.com;

    location / {
        return 301 https://example.com$request_uri;
    }
}

# Redirect www HTTPS to non-www HTTPS
server {
    listen 443 ssl;
    server_name www.example.com;

    ssl_certificate /etc/ssl/certs/origin_cert.pem;
    ssl_certificate_key /etc/ssl/private/origin_key.pem;

    return 301 https://example.com$request_uri;
}

# Main HTTPS Server
server {
    listen 443 ssl;
    server_name example.com;

    # Cloudflare Origin CA Certificate
    ssl_certificate /etc/ssl/certs/origin_cert.pem;
    ssl_certificate_key /etc/ssl/private/origin_key.pem;

    # Recommended SSL Protocols for Cloudflare
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    proxy_buffers 8 16k;
    proxy_buffer_size 32k;


    location /services/ {
        proxy_pass http://deployer;
        proxy_set_header X-Deploy-Token $http_x_deploy_token;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Deploy-Token $http_x_deploy_token;
    }

    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_header Set-Cookie;
    }

    # Static files served by Next.js (_next)
    location /_next {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
