import React, { useState } from 'react';
import { useGeneralContext } from '../../ContextProvider';
import '../../styles/insights.css';
import { InsightDisplay } from '../insights/insightElement';

const SettingsProfile = () => {
  const { userData, ReverieManager, userInsights } = useGeneralContext();

  const categoryDictionary = {
    "agent-behavior-custom-instructions": "AGENT BEHAVIORðŸ”¹CUSTOM INSTRUCTIONS",
    "appearance-personal-style": "APPEARANCEðŸ”¹PERSONAL STYLE",
    "art-imagery": "ARTðŸ”¹IMAGERY",
    "books-audiobooks": "BOOKSðŸ”¹AUDIOBOOKS",
    "business-intelligence": "BUSINESS INTELLIGENCE",
    "communication-collaboration-styles": "COMMUNICATIONðŸ”¹COLLABORATION STYLES",
    "community-membership": "COMMUNITY MEMBERSHIP",
    "consumer-behavior": "CONSUMER BEHAVIOR",
    "conversations-podcasts-debates": "CONVERSATIONSðŸ”¹PODCASTSðŸ”¹DEBATES",
    "custom-lists": "CUSTOM LISTS",    
    "research-interests-curiosity": "INTERESTðŸ”¹CURIOSITY",
    "dates-calendar-planner-schedule": "DATESðŸ”¹CALENDARðŸ”¹PLANNERðŸ”¹SCHEDULE",
    "decision-making-styles": "DECISION-MAKING STYLES",
    "dream-diary": "DREAM DIARY",
    "event-attending": "EVENT ATTENDING",
    "event-hosting": "EVENT HOSTING",
    "family-composition-roles": "FAMILYðŸ”¹COMPOSITIONðŸ”¹ROLES",
    "financial-planning": "FINANCIAL PLANNING",
    "food-cooking-cuisine-dietary-nutrition": "FOODðŸ”¹COOKINGðŸ”¹CUISINEðŸ”¹NUTRITION",
    "games-gaming": "GAMESðŸ”¹GAMING",
    "geographic-location": "GEOGRAPHIC LOCATION",
    "health-sleep-medicine": "HEALTHðŸ”¹SLEEPðŸ”¹MEDICINE",
    "hobbies-habits-leisure": "HOBBIESðŸ”¹HABITSðŸ”¹LEISURE",
    "humor-comedy-inside-humor": "HUMORðŸ”¹COMEDYðŸ”¹INSIDE HUMOR",
    "introspection-reflections-values-principles": "REFLECTIONSðŸ”¹VALUESðŸ”¹PRINCIPLES",
    "language-preferences-proficiency": "LANGUAGE PREFERENCESðŸ”¹PROFICIENCY",
    "lectures": "LECTURES",
    "memories-life-events": "MEMORIESðŸ”¹LIFE EVENTS",
    "mental-health-emotional-wellbeing": "MENTAL HEALTHðŸ”¹EMOTIONAL WELLBEING",
    "movies-tv-anime": "MOVIESðŸ”¹TVðŸ”¹ANIME",
    "song-writer": "MY SONGS",
    "my-social-media": "MY SOCIAL MEDIA",
    "pets-animals": "PETSðŸ”¹ANIMALS",
    "news-current-affairs": "NEWSðŸ”¹CURRENT AFFAIRS",
    "organizations-corporations": "ORGANIZATIONSðŸ”¹CORPORATIONS",
    "password-vault": "PASSWORD VAULT",
    "personal-contacts-relationships": "PERSONAL CONTACTSðŸ”¹RELATIONSHIPS",
    "personal-growth-accountability": "PERSONAL GROWTHðŸ”¹ACCOUNTABILITY",
    "personality-traits-motivations": "PERSONALITY TRAITSðŸ”¹MOTIVATIONS",
    "pets": "PETS",
    "philanthropy-legacy-sustainability-impact": "PHILANTHROPYðŸ”¹LEGACYðŸ”¹SUSTAINABILITYðŸ”¹IMPACT",
    "philosophical-ideological-existential": "PHILOSOPHICALðŸ”¹IDEOLOGICALðŸ”¹EXISTENTIAL",
    "physical-environment-transportation-sensory-preferences": "ENVIRONMENTðŸ”¹TRANSPORTATIONðŸ”¹SENSORY PREFERENCES",
    "physical-fitness-exercise": "PHYSICAL FITNESSðŸ”¹EXERCISE",
    "political-civic-engagement": "POLITICALðŸ”¹CIVIC ENGAGEMENT",
    "privacy-security": "PRIVACYðŸ”¹SECURITY",
    "projects": "PROJECTS",
    "reminders": "REMINDERS",
    "resume-work-experience": "RESUMEðŸ”¹WORK EXPERIENCE",
    "romantic-sexual": "ROMANTICðŸ”¹SEXUAL",
    "social-cultural-identity": "SOCIALðŸ”¹CULTURALðŸ”¹IDENTITY",
    "thought-leaders-influencers": "THOUGHT LEADERSðŸ”¹INFLUENCERS",
    "todos-tasks": "TODOSðŸ”¹TASKS",
    "travel-plans": "TRAVEL PLANS",
    "user-information": "USER INFORMATION",
    "video-animation-projects": "VIDEOðŸ”¹ANIMATIONðŸ”¹PROJECTS",
    "writing-stories": "WRITINGðŸ”¹STORIES",
  };

  const groupedInsights = userInsights.reduce((groups, insight) => {
    const { category } = insight;
    if (!groups[category]) {
      groups[category] = [];
    }
    groups[category].push(insight);
    return groups;
  }, {});

  const [collapsedCategories, setCollapsedCategories] = useState({});

  const toggleCategory = (category) => {
    setCollapsedCategories((prevState) => ({
      ...prevState,
      [category]: !prevState[category],
    }));
  };

  // Sort categories based on the order of categoryDictionary
  const sortedCategories = Object.keys(groupedInsights).sort((a, b) => {
    const indexA = Object.keys(categoryDictionary).indexOf(a);
    const indexB = Object.keys(categoryDictionary).indexOf(b);
    return indexA - indexB;
  });

  return (
    <div className="tile-container">
      {sortedCategories.map((category) => (
        <div key={category} className="insight-category-container">
          <div
            className="card-container-tab"
            onClick={() => toggleCategory(category)}
          >
            <div className="card-container-title-count">
              {collapsedCategories[category] ? 'â–¶' : 'â–¼'}
            </div>
            <div className="card-container-title">
              {categoryDictionary[category] || category}
            </div>
          </div>
          {!collapsedCategories[category] && (
            <div className="insights-container">
              {groupedInsights[category].map((insight, index) => (
                < InsightDisplay key={index} insight={insight} /> 
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default SettingsProfile;